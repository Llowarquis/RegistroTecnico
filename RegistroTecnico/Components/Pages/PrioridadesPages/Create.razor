@page "/Prioridades/Create"

@inject IJSRuntime JSRuntime
@inject PrioridadesService prioridadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Prioridades Create</PageTitle>
<EditForm Model="@Prioridad" OnValidSubmit="Agregar">
<DataAnnotationsValidator/>

    <div class="container">
        <div class="card shadow-lg">
            @*HEADER*@
            <div class="card-header text-center">
                <h3><strong>Crear nueva Prioridad</strong></h3>
            </div>

            @*BODY*@
            <div class="card-body">
                <div class="row">
                    <div class="col-1 ms-5"> @*Se muestra el ID*@
                        <label class="form-label"><strong>ID:</strong></label>
                        <InputNumber class="form-control" style="width: 50px" @bind-Value="Prioridad.PrioridadesId" readonly></InputNumber>
                    </div>

                    <div class="col-2 ms-5"> @*Campo Descripcion*@
                        <label class="form-label"><strong>Descripci&oacute;n:</strong></label>
                        <InputText placeholder="Descripci&oacute;n" class="form-control" @bind-Value="Prioridad.Descripcion" DisplayName="Descripci&oacute;n"></InputText>
                        <ValidationMessage For="@(() => Prioridad.Descripcion)" />
                    </div>

                    <div class="col-3 ms-5" >@*Campo Tiempo*@
                        <label class="form-label"><strong>Tiempo (Minutos):</strong></label>
                        <InputNumber class="form-control" @bind-Value="Prioridad.Tiempo"></InputNumber>
                        <ValidationMessage For="@(() => Prioridad.Tiempo)" />
                    </div>
                </div>
            </div>

            @*FOOTER*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-chevron-double-left" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success bi bi-floppy-fill">    Agregar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Prioridades Prioridad { get; set; } = new Prioridades();

    public async Task Agregar()
    {
        if (await Validar())
        {
            await JSRuntime.InvokeVoidAsync("alert", "Ya existe una Prioridad con ese nombre...");
            return;
        }
        var crear = await prioridadesService.Guardar(Prioridad);

        if (crear)
        {
            await JSRuntime.InvokeVoidAsync("alert", "La Prioridad se creo correctamente!");
            navigationManager.NavigateTo("/Prioridades/Index");
            return;
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Ha ocurrido un error al crear la Prioridad...");
            navigationManager.NavigateTo("/Prioridades/Index");
            return;
        }
    }

    private async Task<bool> Validar()
    {
        return await prioridadesService.ExisteDescripcion(Prioridad.Descripcion);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Prioridades/Index");
    }
}
