@page "/Clientes/Index"

@inject IJSRuntime JSRuntime
@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Clientes Index</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-center">
            @*Titulo*@
            <div>
                <h3><strong>Consulta de Clientes</strong></h3>
            </div>
                
            <div class="row justify-content-center">
                <label class="col-1"><strong>Filtrar:</strong></label>
                <div class="col-2 input-group" style="width: 250px">
                    @*Campo Filtro*@
                    <InputSelect class="form-select" style="width: 150px" @bind-Value="@valorFiltro">
                        <option value="" selected disabled>Selecciona...</option>
                        <option value="ID">ID</option>
                        <option value="Nombre">Nombre</option>
                        <option value="No. WhatsApp">No. WhatsApp</option>
                    </InputSelect>

                    @*Btn Restablecer filtro*@
                    <button class="col-1 btn btn-secondary bi bi-arrow-counterclockwise" style="width: 40px" @onclick="Restablecer"></button>
                </div>
                <label class="col-1"><strong>Buscar:</strong></label>
                @*Barra de busqueda con Btn de Buscar*@
                <div class="col-2 input-group" style="width: 500px">
                    <input @bind="@searchBarValue" @onkeypress="HandleKeyDown" placeholder="Buscar" class="form-control" />
                    <button @onclick="Buscar" class="btn btn-success bi bi-search" type="button">  Buscar</button>
                </div>
                @*Btn Crear*@
                <div class="col-2">
                    <a type="button" class="btn btn-primary bi bi-person-fill-add border-bottom" href="/Clientes/Create">   Crear</a>
                </div>
            </div>
        </div>
        @*Body*@
        <div class="card-body">
            <table class="table table-bordered text-center table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>WhatsApp</th>
                        <th>Visualizar</th>
                        <th>Modificar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cliente in ListaClientes)
                    {
                        <tr>
                            <td>@cliente.ClienteId</td>
                            <td>@cliente.Nombres</td>
                            <td>@String.Format("{0:(###)-###-####}", long.Parse(cliente.WhatsApp))</td>
                            @*Visualizacion*@
                            <td>
                                <a type="button" class="btn btn-outline-dark btn-outline-light bi bi-eye-fill" style="background-color: #8a33ff"
                                   href="/Clientes/View/@cliente.ClienteId"></a>
                            </td>

                            @*Modificar*@
                            <td>
                                <a type="button" class="btn btn-outline-dark btn-outline-light bi bi-pencil-fill" style="background-color: #ffc300"
                                   href="/Clientes/Modify/@cliente.ClienteId"></a>
                            </td>

                            @*Eliminar*@
                            <td>
                                <a type="button" class="btn btn-outline-dark btn-outline-light bi bi-trash3-fill" style="background-color: #ff3333"
                                   href="/Clientes/Delete/@cliente.ClienteId"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @*Footer*@
        <div class="card-footer">
            <p><strong>Cantidad total de Clientes: </strong>@ListaClientes.Count()</p>
        </div>
    </div>
</div>

@code {
    public Clientes Cliente { get; set; } = new Clientes();
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public string valorFiltro { get; set; } = "";
    public string searchBarValue { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await clientesService.Listar(c => true);
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
            await Buscar();
    }

    public async Task Buscar()
    {
        if (valorFiltro.Trim().ToLower() != "")
        {
            switch (valorFiltro)
            {
                case "ID":
                    if (int.TryParse(searchBarValue.Trim(), out int id))
                        ListaClientes = await clientesService.Listar(lt => lt.ClienteId == id);
                    break;

                case "Nombre":
                    ListaClientes = await clientesService.Listar(lt => lt.Nombres.Trim().ToLower().Contains(searchBarValue.Trim().ToLower()));
                    break;

                case "No. WhatsApp":
                    ListaClientes = await clientesService.Listar(lt => lt.WhatsApp.Trim().ToLower().Contains(searchBarValue.Trim().ToLower()));
                    break;
            }
        }
        else
            ListaClientes = await clientesService.Listar(lt => true);
    }

    private async Task Restablecer()
    {
        ListaClientes = await clientesService.Listar(t => true);
        valorFiltro = "";
        searchBarValue = string.Empty;
    }
}
