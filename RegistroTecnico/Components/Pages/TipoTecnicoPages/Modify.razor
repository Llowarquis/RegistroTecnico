@page "/TipoTecnicos/Modify/{tipoTecnicoId:int}"

@inject IJSRuntime JSRuntime
@inject TipoTecnicoServices tipoTecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Modify</PageTitle>
<EditForm Model="TipoTecnico" OnValidSubmit="Guardar">
    <div class="container">
        <div class="card shadow-lg">
            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Modificar Tipo de T&eacutecnico</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">
                <div>@*Campo Descripcion*@
                    <label><strong>Descripci&oacute;n:</strong></label>
                    <InputText class="form-control" style="width: 200px" @bind-Value="TipoTecnico.Descripcion"></InputText>
                    <ValidationMessage For="@(() => TipoTecnico.Descripcion)" />
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-chevron-double-left" @onclick="Volver">  Volver   </button>
                <button type="submit" class="btn btn-success  bi bi-floppy-fill" @onclick="Guardar">   Guardar   </button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int tipoTecnicoId { get; set; }
    public TipoTecnicos TipoTecnico = new TipoTecnicos();

    protected override async Task OnInitializedAsync()
    {
        TipoTecnico = await tipoTecnicoService.Buscar(tipoTecnicoId);
    }

    public async Task Guardar()
    {
        if (await Validar())
        {
            await JSRuntime.InvokeVoidAsync("alert", "Ya existe un tecnico con ese nombre...");
            return;
        }

        var modificado = await tipoTecnicoService.Guardar(TipoTecnico);

        if (modificado)
        {
            await JSRuntime.InvokeVoidAsync("alert","El Tecnico se ha modificado correctamente!");
            navigationManager.NavigateTo("/TipoTecnicos/Index");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Ha ocurrido un error al modificar el Tecnico...");
            navigationManager.NavigateTo("/TipoTecnicos/Index");
        }

    }

    private async Task<bool> Validar()
    {
        return await tipoTecnicoService.ValidarDescripcion(TipoTecnico?.Descripcion);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/TipoTecnicos/Index");
    }
}
